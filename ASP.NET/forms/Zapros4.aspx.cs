/*flexberryautogenerated="false"*/
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Web.Services;
using System.Data.SqlClient;
using ICSSoft.STORMNET.Business;
using IIS.Прокат_велосипедов_2.hndl;
using System.IO;
using System.Runtime.Serialization.Json;

namespace IIS.Прокат_велосипедов_2
{
    public partial class Запрос4 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            

        }
        [WebMethod]
        public static string BestWorstRequest_1(string from, string to)
        {
            if (from == null || from == string.Empty)
            {
                from = "01.01.1900";
            }
            if (to == null || to == string.Empty)
            {
                to = DateTime.Now.ToShortDateString();
            }
            using (SqlConnection conn = (SqlConnection)((SQLDataService)DataServiceProvider.DataService).GetConnection())
            {
                string commandText =
                    @"select ТочкаПроката.Адрес, count(*) as Перевозки
                        from ПеревозкаВелосипеда inner join ВелосипедВПеревозке on ПеревозкаВелосипеда.primaryKey = ВелосипедВПеревозке.ПеревозкаВелосипеда
					    inner join ТочкаПроката on ТочкаПроката.primaryKey = ПеревозкаВелосипеда.НачальнаяТочка_m0
                        where ПеревозкаВелосипеда.ДатаНачала between @DateFrom and @DateTo
                        group by ТочкаПроката.primaryKey, ТочкаПроката.Адрес";
                conn.Open();
                SqlCommand com = new SqlCommand(commandText, conn);
                SqlParameter dateFromPar = new SqlParameter
                {
                    DbType = DbType.DateTime,
                    ParameterName = "@DateFrom",
                    Value = Convert.ToDateTime(from),
                };
                SqlParameter dateToPar = new SqlParameter
                {
                    DbType = DbType.DateTime,
                    ParameterName = "@DateTo",
                    Value = Convert.ToDateTime(to),
                };
                com.Parameters.AddRange
                    (new SqlParameter[] { dateFromPar, dateToPar });

                var reader = com.ExecuteReader();
                JSONStruct toJSON = new JSONStruct();
                toJSON.AddCol("Точка проката", "string");
                toJSON.AddCol("Перевезнно велосипедов", "number");
                while (reader.Read())
                {
                    string[] row = new string[2];
                    row[0] = reader.GetString(0);
                    row[1] = reader.GetInt32(1).ToString();
                    toJSON.AddRow(row);
                }
                conn.Close();

                string JSONAsString = string.Empty;
                using (MemoryStream stream1 = new MemoryStream())
                {
                    DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(JSONStruct));
                    ser.WriteObject(stream1, toJSON);
                    using (StreamReader sr = new StreamReader(stream1))
                    {
                        stream1.Position = 0;
                        JSONAsString = sr.ReadToEnd();
                    }
                }
                return JSONAsString;
            }

        }
    }
}
