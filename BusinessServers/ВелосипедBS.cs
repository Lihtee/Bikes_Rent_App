//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Прокат_велосипедов_2
{
    using System;
    using System.Xml;
    
    
    // *** Start programmer edit section *** (Using statements)
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business;
    using System.Linq;
    using ICSSoft.STORMNET.Business.LINQProvider;

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// ВелосипедBS.
    /// </summary>
    // *** Start programmer edit section *** (ВелосипедBS CustomAttributes)

    // *** End programmer edit section *** (ВелосипедBS CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class ВелосипедBS : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (ВелосипедBS CustomMembers)

        // *** End programmer edit section *** (ВелосипедBS CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateВелосипед CustomAttributes)

        // *** End programmer edit section *** (OnUpdateВелосипед CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateВелосипед(IIS.Прокат_велосипедов_2.Велосипед UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateВелосипед)
            var ds = DataServiceProvider.DataService;
            //Изменение объекта 
            if (((DataObject)UpdatedObject).GetStatus() == ObjectStatus.Altered)
            {
                //if (!UpdatedObject.CheckLoadedProperty("ИсторияСостояний"))
                //{
                //    DataService.LoadObject(;
                //}

                
                //Если изменилось состояние, то ставим дату окончания старому состоянию
                //и содаем запись с новым состоянием
                if (UpdatedObject.IsAlteredProperty<Велосипед>(v => v.ТекущееСостояние))
                {
                    var oldStateHist = UpdatedObject.ИсторияСостояний.Cast<ИсторияСостояний>()
                                        .Where(x => x.ДатаОкончания == null
                                                    && x.ДатаНачала <= DateTime.Now)
                                        .FirstOrDefault();
                    oldStateHist.ДатаОкончания =
                        (ICSSoft.STORMNET.UserDataTypes.NullableDateTime)DateTime.Now;

                    var newStateHist = new ИсторияСостояний
                    {
                        ДатаНачала = DateTime.Now,
                        СостояниеВелосипеда = UpdatedObject.ТекущееСостояние,
                        Велосипед = UpdatedObject
                    };

                    UpdatedObject.ИсторияСостояний.Add(newStateHist);
                }
            }

            //Создание объекта
            if (((DataObject)UpdatedObject).GetStatus() == ObjectStatus.Created)
            {
                var topNumBike = ds.Query<Велосипед>(Велосипед.Views.ВелосипедE)
                                    .OrderByDescending(x => x.Номер)
                                    .FirstOrDefault();
                int topNum = 0;
                if (topNumBike != null)
                {
                    topNum = topNumBike.Номер + 1;   
                }
                UpdatedObject.Номер = topNum;

                var newStateHist = new ИсторияСостояний
                {
                    ДатаНачала = DateTime.Now,
                    СостояниеВелосипеда = UpdatedObject.ТекущееСостояние,
                    Велосипед = UpdatedObject
                };

                UpdatedObject.ИсторияСостояний.Add(newStateHist);

            }
            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateВелосипед)
        }
    }
}
