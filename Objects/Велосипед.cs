//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Прокат_велосипедов_2
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Велосипед.
    /// </summary>
    // *** Start programmer edit section *** (Велосипед CustomAttributes)

    // *** End programmer edit section *** (Велосипед CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("AuditView", new string[] {
            "Номер as \'Номер\'",
            "ТочкаПроката as \'Точка проката\'",
            "ТочкаПроката.Адрес as \'Адрес\'",
            "ТипВелосипеда as \'Тип велосипеда\'",
            "ТипВелосипеда.Название as \'Название\'",
            "ТекущееСостояние as \'Текущее состояние\'",
            "ТекущееСостояние.Название as \'Название\'"})]
    [AssociatedDetailViewAttribute("AuditView", "ПрокатВелосипеда", "AuditView", true, "", "Прокат велосипеда", true, new string[] {
            ""})]
    [AssociatedDetailViewAttribute("AuditView", "ИсторияСостояний", "AuditView", true, "", "История состояний", true, new string[] {
            ""})]
    [View("ВелосипедE", new string[] {
            "Номер as \'Номер\'",
            "ТипВелосипеда as \'Тип велосипеда\'",
            "ТекущееСостояние as \'Текущее состояние\'",
            "ТочкаПроката as \'ТочкаПроката\'"})]
    [AssociatedDetailViewAttribute("ВелосипедE", "ПрокатВелосипеда", "ПрокатВелосипедаE", true, "", "Прокат велосипеда", true, new string[] {
            ""})]
    [AssociatedDetailViewAttribute("ВелосипедE", "ИсторияСостояний", "ИсторияСостоянийE", true, "", "История состояний", true, new string[] {
            ""})]
    [MasterViewDefineAttribute("ВелосипедE", "ТипВелосипеда", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Название")]
    [MasterViewDefineAttribute("ВелосипедE", "ТекущееСостояние", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Название")]
    [MasterViewDefineAttribute("ВелосипедE", "ТочкаПроката", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Адрес")]
    [View("ВелосипедL", new string[] {
            "Номер as \'Номер\'",
            "ТипВелосипеда.Название as \'Название\'",
            "ТекущееСостояние.Название as \'Название\'"})]
    public class Велосипед : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private int fНомер;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private IIS.Прокат_велосипедов_2.ТочкаПроката fТочкаПроката;
        
        private IIS.Прокат_велосипедов_2.ТипВелосипеда fТипВелосипеда;
        
        private IIS.Прокат_велосипедов_2.СостояниеВелосипеда fТекущееСостояние;
        
        private IIS.Прокат_велосипедов_2.DetailArrayOfПрокатВелосипеда fПрокатВелосипеда;
        
        private IIS.Прокат_велосипедов_2.DetailArrayOfИсторияСостояний fИсторияСостояний;
        
        // *** Start programmer edit section *** (Велосипед CustomMembers)

        // *** End programmer edit section *** (Велосипед CustomMembers)

        
        /// <summary>
        /// Номер.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.Номер CustomAttributes)

        // *** End programmer edit section *** (Велосипед.Номер CustomAttributes)
        [NotNull()]
        public virtual int Номер
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.Номер Get start)

                // *** End programmer edit section *** (Велосипед.Номер Get start)
                int result = this.fНомер;
                // *** Start programmer edit section *** (Велосипед.Номер Get end)

                // *** End programmer edit section *** (Велосипед.Номер Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.Номер Set start)

                // *** End programmer edit section *** (Велосипед.Номер Set start)
                this.fНомер = value;
                // *** Start programmer edit section *** (Велосипед.Номер Set end)

                // *** End programmer edit section *** (Велосипед.Номер Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Велосипед.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.CreateTime Get start)

                // *** End programmer edit section *** (Велосипед.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Велосипед.CreateTime Get end)

                // *** End programmer edit section *** (Велосипед.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.CreateTime Set start)

                // *** End programmer edit section *** (Велосипед.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Велосипед.CreateTime Set end)

                // *** End programmer edit section *** (Велосипед.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.Creator CustomAttributes)

        // *** End programmer edit section *** (Велосипед.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.Creator Get start)

                // *** End programmer edit section *** (Велосипед.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Велосипед.Creator Get end)

                // *** End programmer edit section *** (Велосипед.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.Creator Set start)

                // *** End programmer edit section *** (Велосипед.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Велосипед.Creator Set end)

                // *** End programmer edit section *** (Велосипед.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.EditTime CustomAttributes)

        // *** End programmer edit section *** (Велосипед.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.EditTime Get start)

                // *** End programmer edit section *** (Велосипед.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Велосипед.EditTime Get end)

                // *** End programmer edit section *** (Велосипед.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.EditTime Set start)

                // *** End programmer edit section *** (Велосипед.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Велосипед.EditTime Set end)

                // *** End programmer edit section *** (Велосипед.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.Editor CustomAttributes)

        // *** End programmer edit section *** (Велосипед.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.Editor Get start)

                // *** End programmer edit section *** (Велосипед.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Велосипед.Editor Get end)

                // *** End programmer edit section *** (Велосипед.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.Editor Set start)

                // *** End programmer edit section *** (Велосипед.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Велосипед.Editor Set end)

                // *** End programmer edit section *** (Велосипед.Editor Set end)
            }
        }
        
        /// <summary>
        /// Велосипед.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.ТочкаПроката CustomAttributes)

        // *** End programmer edit section *** (Велосипед.ТочкаПроката CustomAttributes)
        [PropertyStorage(new string[] {
                "ТочкаПроката"})]
        [NotNull()]
        public virtual IIS.Прокат_велосипедов_2.ТочкаПроката ТочкаПроката
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.ТочкаПроката Get start)

                // *** End programmer edit section *** (Велосипед.ТочкаПроката Get start)
                IIS.Прокат_велосипедов_2.ТочкаПроката result = this.fТочкаПроката;
                // *** Start programmer edit section *** (Велосипед.ТочкаПроката Get end)

                // *** End programmer edit section *** (Велосипед.ТочкаПроката Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.ТочкаПроката Set start)

                // *** End programmer edit section *** (Велосипед.ТочкаПроката Set start)
                this.fТочкаПроката = value;
                // *** Start programmer edit section *** (Велосипед.ТочкаПроката Set end)

                // *** End programmer edit section *** (Велосипед.ТочкаПроката Set end)
            }
        }
        
        /// <summary>
        /// Велосипед.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.ТипВелосипеда CustomAttributes)

        // *** End programmer edit section *** (Велосипед.ТипВелосипеда CustomAttributes)
        [PropertyStorage(new string[] {
                "ТипВелосипеда"})]
        [NotNull()]
        public virtual IIS.Прокат_велосипедов_2.ТипВелосипеда ТипВелосипеда
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.ТипВелосипеда Get start)

                // *** End programmer edit section *** (Велосипед.ТипВелосипеда Get start)
                IIS.Прокат_велосипедов_2.ТипВелосипеда result = this.fТипВелосипеда;
                // *** Start programmer edit section *** (Велосипед.ТипВелосипеда Get end)

                // *** End programmer edit section *** (Велосипед.ТипВелосипеда Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.ТипВелосипеда Set start)

                // *** End programmer edit section *** (Велосипед.ТипВелосипеда Set start)
                this.fТипВелосипеда = value;
                // *** Start programmer edit section *** (Велосипед.ТипВелосипеда Set end)

                // *** End programmer edit section *** (Велосипед.ТипВелосипеда Set end)
            }
        }
        
        /// <summary>
        /// Велосипед.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.ТекущееСостояние CustomAttributes)

        // *** End programmer edit section *** (Велосипед.ТекущееСостояние CustomAttributes)
        [PropertyStorage(new string[] {
                "ТекущееСостояние"})]
        [NotNull()]
        public virtual IIS.Прокат_велосипедов_2.СостояниеВелосипеда ТекущееСостояние
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.ТекущееСостояние Get start)

                // *** End programmer edit section *** (Велосипед.ТекущееСостояние Get start)
                IIS.Прокат_велосипедов_2.СостояниеВелосипеда result = this.fТекущееСостояние;
                // *** Start programmer edit section *** (Велосипед.ТекущееСостояние Get end)

                // *** End programmer edit section *** (Велосипед.ТекущееСостояние Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.ТекущееСостояние Set start)

                // *** End programmer edit section *** (Велосипед.ТекущееСостояние Set start)
                this.fТекущееСостояние = value;
                // *** Start programmer edit section *** (Велосипед.ТекущееСостояние Set end)

                // *** End programmer edit section *** (Велосипед.ТекущееСостояние Set end)
            }
        }
        
        /// <summary>
        /// Велосипед.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.ПрокатВелосипеда CustomAttributes)

        // *** End programmer edit section *** (Велосипед.ПрокатВелосипеда CustomAttributes)
        public virtual IIS.Прокат_велосипедов_2.DetailArrayOfПрокатВелосипеда ПрокатВелосипеда
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.ПрокатВелосипеда Get start)

                // *** End programmer edit section *** (Велосипед.ПрокатВелосипеда Get start)
                if ((this.fПрокатВелосипеда == null))
                {
                    this.fПрокатВелосипеда = new IIS.Прокат_велосипедов_2.DetailArrayOfПрокатВелосипеда(this);
                }
                IIS.Прокат_велосипедов_2.DetailArrayOfПрокатВелосипеда result = this.fПрокатВелосипеда;
                // *** Start programmer edit section *** (Велосипед.ПрокатВелосипеда Get end)

                // *** End programmer edit section *** (Велосипед.ПрокатВелосипеда Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.ПрокатВелосипеда Set start)

                // *** End programmer edit section *** (Велосипед.ПрокатВелосипеда Set start)
                this.fПрокатВелосипеда = value;
                // *** Start programmer edit section *** (Велосипед.ПрокатВелосипеда Set end)

                // *** End programmer edit section *** (Велосипед.ПрокатВелосипеда Set end)
            }
        }
        
        /// <summary>
        /// Велосипед.
        /// </summary>
        // *** Start programmer edit section *** (Велосипед.ИсторияСостояний CustomAttributes)

        // *** End programmer edit section *** (Велосипед.ИсторияСостояний CustomAttributes)
        public virtual IIS.Прокат_велосипедов_2.DetailArrayOfИсторияСостояний ИсторияСостояний
        {
            get
            {
                // *** Start programmer edit section *** (Велосипед.ИсторияСостояний Get start)

                // *** End programmer edit section *** (Велосипед.ИсторияСостояний Get start)
                if ((this.fИсторияСостояний == null))
                {
                    this.fИсторияСостояний = new IIS.Прокат_велосипедов_2.DetailArrayOfИсторияСостояний(this);
                }
                IIS.Прокат_велосипедов_2.DetailArrayOfИсторияСостояний result = this.fИсторияСостояний;
                // *** Start programmer edit section *** (Велосипед.ИсторияСостояний Get end)

                // *** End programmer edit section *** (Велосипед.ИсторияСостояний Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Велосипед.ИсторияСостояний Set start)

                // *** End programmer edit section *** (Велосипед.ИсторияСостояний Set start)
                this.fИсторияСостояний = value;
                // *** Start programmer edit section *** (Велосипед.ИсторияСостояний Set end)

                // *** End programmer edit section *** (Велосипед.ИсторияСостояний Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(IIS.Прокат_велосипедов_2.Велосипед));
                }
            }
            
            /// <summary>
            /// "ВелосипедE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ВелосипедE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ВелосипедE", typeof(IIS.Прокат_велосипедов_2.Велосипед));
                }
            }
            
            /// <summary>
            /// "ВелосипедL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ВелосипедL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ВелосипедL", typeof(IIS.Прокат_велосипедов_2.Велосипед));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
