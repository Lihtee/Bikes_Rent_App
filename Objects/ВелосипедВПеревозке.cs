//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Прокат_велосипедов_2
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Велосипед в перевозке.
    /// </summary>
    // *** Start programmer edit section *** (ВелосипедВПеревозке CustomAttributes)

    // *** End programmer edit section *** (ВелосипедВПеревозке CustomAttributes)
    [AutoAltered()]
    [Caption("Велосипед в перевозке")]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Велосипед as \'Велосипед\'",
            "Велосипед.Номер as \'Номер\'"}, Hidden=new string[] {
            "Велосипед.Номер"})]
    [MasterViewDefineAttribute("AuditView", "Велосипед", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Номер")]
    [View("ВелосипедВПеревозкеE", new string[] {
            "Велосипед as \'Велосипед\'",
            "Велосипед.Номер as \'Номер\'"}, Hidden=new string[] {
            "Велосипед.Номер"})]
    [MasterViewDefineAttribute("ВелосипедВПеревозкеE", "Велосипед", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Номер")]
    public class ВелосипедВПеревозке : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private IIS.Прокат_велосипедов_2.Велосипед fВелосипед;
        
        private IIS.Прокат_велосипедов_2.ПеревозкаВелосипеда fПеревозкаВелосипеда;
        
        // *** Start programmer edit section *** (ВелосипедВПеревозке CustomMembers)

        // *** End programmer edit section *** (ВелосипедВПеревозке CustomMembers)

        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.CreateTime CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.CreateTime Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.CreateTime Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.CreateTime Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.CreateTime Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.Creator CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Creator Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Creator Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Creator Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Creator Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.EditTime CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.EditTime Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.EditTime Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.EditTime Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.EditTime Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.Editor CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Editor Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Editor Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Editor Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Editor Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Editor Set end)
            }
        }
        
        /// <summary>
        /// Велосипед в перевозке.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.Велосипед CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.Велосипед CustomAttributes)
        [PropertyStorage(new string[] {
                "Велосипед"})]
        [NotNull()]
        public virtual IIS.Прокат_велосипедов_2.Велосипед Велосипед
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Велосипед Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Велосипед Get start)
                IIS.Прокат_велосипедов_2.Велосипед result = this.fВелосипед;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Велосипед Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Велосипед Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Велосипед Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Велосипед Set start)
                this.fВелосипед = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.Велосипед Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.Велосипед Set end)
            }
        }
        
        /// <summary>
        /// мастеровая ссылка на шапку IIS.Прокат_велосипедов_2.ПеревозкаВелосипеда.
        /// </summary>
        // *** Start programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда CustomAttributes)

        // *** End programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда CustomAttributes)
        [Agregator()]
        [NotNull()]
        [PropertyStorage(new string[] {
                "ПеревозкаВелосипеда"})]
        public virtual IIS.Прокат_велосипедов_2.ПеревозкаВелосипеда ПеревозкаВелосипеда
        {
            get
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Get start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Get start)
                IIS.Прокат_велосипедов_2.ПеревозкаВелосипеда result = this.fПеревозкаВелосипеда;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Get end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Set start)

                // *** End programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Set start)
                this.fПеревозкаВелосипеда = value;
                // *** Start programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Set end)

                // *** End programmer edit section *** (ВелосипедВПеревозке.ПеревозкаВелосипеда Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(IIS.Прокат_велосипедов_2.ВелосипедВПеревозке));
                }
            }
            
            /// <summary>
            /// "ВелосипедВПеревозкеE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ВелосипедВПеревозкеE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ВелосипедВПеревозкеE", typeof(IIS.Прокат_велосипедов_2.ВелосипедВПеревозке));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
    
    /// <summary>
    /// Detail array of ВелосипедВПеревозке.
    /// </summary>
    // *** Start programmer edit section *** (DetailArrayDetailArrayOfВелосипедВПеревозке CustomAttributes)

    // *** End programmer edit section *** (DetailArrayDetailArrayOfВелосипедВПеревозке CustomAttributes)
    public class DetailArrayOfВелосипедВПеревозке : ICSSoft.STORMNET.DetailArray
    {
        
        // *** Start programmer edit section *** (IIS.Прокат_велосипедов_2.DetailArrayOfВелосипедВПеревозке members)

        // *** End programmer edit section *** (IIS.Прокат_велосипедов_2.DetailArrayOfВелосипедВПеревозке members)

        
        /// <summary>
        /// Construct detail array.
        /// </summary>
        /// <summary>
        /// Returns object with type ВелосипедВПеревозке by index.
        /// </summary>
        /// <summary>
        /// Adds object with type ВелосипедВПеревозке.
        /// </summary>
        public DetailArrayOfВелосипедВПеревозке(IIS.Прокат_велосипедов_2.ПеревозкаВелосипеда fПеревозкаВелосипеда) : 
                base(typeof(ВелосипедВПеревозке), ((ICSSoft.STORMNET.DataObject)(fПеревозкаВелосипеда)))
        {
        }
        
        public IIS.Прокат_велосипедов_2.ВелосипедВПеревозке this[int index]
        {
            get
            {
                return ((IIS.Прокат_велосипедов_2.ВелосипедВПеревозке)(this.ItemByIndex(index)));
            }
        }
        
        public virtual void Add(IIS.Прокат_велосипедов_2.ВелосипедВПеревозке dataobject)
        {
            this.AddObject(((ICSSoft.STORMNET.DataObject)(dataobject)));
        }
    }
}
