//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Прокат_велосипедов_2
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Точка проката.
    /// </summary>
    // *** Start programmer edit section *** (ТочкаПроката CustomAttributes)

    // *** End programmer edit section *** (ТочкаПроката CustomAttributes)
    [AutoAltered()]
    [Caption("Точка проката")]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("ТочкаПрокатаE", new string[] {
            "Адрес as \'Адрес\'",
            "КоличествоВелосипедов as \'Количество велосипедов\'",
            "Актуально as \'Актуально\'",
            "ДатаНачалаАктуальности as \'Дата начала актуальности\'",
            "ДатаОкончанияАктуальности as \'Дата окончания актуальности\'"})]
    [View("ТочкаПрокатаL", new string[] {
            "Адрес as \'Адрес\'",
            "КоличествоВелосипедов as \'Количество велосипедов\'",
            "Актуально as \'Актуально\'",
            "ДатаНачалаАктуальности as \'Дата начала актуальности\'",
            "ДатаОкончанияАктуальности as \'Дата окончания актуальности\'"})]
    public class ТочкаПроката : ICSSoft.STORMNET.DataObject, IIS.Прокат_велосипедов_2.IАктуально
    {
        
        private string fАдрес;
        
        private bool fАктуально;
        
        private System.DateTime fДатаНачалаАктуальности;
        
        private ICSSoft.STORMNET.UserDataTypes.NullableDateTime fДатаОкончанияАктуальности;
        
        // *** Start programmer edit section *** (ТочкаПроката CustomMembers)

        // *** End programmer edit section *** (ТочкаПроката CustomMembers)

        
        /// <summary>
        /// Адрес.
        /// </summary>
        // *** Start programmer edit section *** (ТочкаПроката.Адрес CustomAttributes)

        // *** End programmer edit section *** (ТочкаПроката.Адрес CustomAttributes)
        [StrLen(255)]
        [NotNull()]
        public virtual string Адрес
        {
            get
            {
                // *** Start programmer edit section *** (ТочкаПроката.Адрес Get start)

                // *** End programmer edit section *** (ТочкаПроката.Адрес Get start)
                string result = this.fАдрес;
                // *** Start programmer edit section *** (ТочкаПроката.Адрес Get end)

                // *** End programmer edit section *** (ТочкаПроката.Адрес Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ТочкаПроката.Адрес Set start)

                // *** End programmer edit section *** (ТочкаПроката.Адрес Set start)
                this.fАдрес = value;
                // *** Start programmer edit section *** (ТочкаПроката.Адрес Set end)

                // *** End programmer edit section *** (ТочкаПроката.Адрес Set end)
            }
        }
        
        /// <summary>
        /// КоличествоВелосипедов.
        /// </summary>
        // *** Start programmer edit section *** (ТочкаПроката.КоличествоВелосипедов CustomAttributes)

        // *** End programmer edit section *** (ТочкаПроката.КоличествоВелосипедов CustomAttributes)
        [ICSSoft.STORMNET.NotStored()]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.SQLDataService), "SELECT COUNT(Велосипед.Номер) \r\nFROM (ТочкаПроката INNER JOIN Велосипед ON ТочкаП" +
            "роката.primaryKey = Велосипед.ТочкаПроката) \r\nWHERE Велосипед.ТочкаПроката = Sto" +
            "rmMainObjectKey ")]
        [NotNull()]
        public virtual int КоличествоВелосипедов
        {
            get
            {
                // *** Start programmer edit section *** (ТочкаПроката.КоличествоВелосипедов Get)
                return 0;
                // *** End programmer edit section *** (ТочкаПроката.КоличествоВелосипедов Get)
            }
            set
            {
                // *** Start programmer edit section *** (ТочкаПроката.КоличествоВелосипедов Set)

                // *** End programmer edit section *** (ТочкаПроката.КоличествоВелосипедов Set)
            }
        }
        
        /// <summary>
        /// Актуально.
        /// </summary>
        // *** Start programmer edit section *** (ТочкаПроката.Актуально CustomAttributes)

        // *** End programmer edit section *** (ТочкаПроката.Актуально CustomAttributes)
        public virtual bool Актуально
        {
            get
            {
                // *** Start programmer edit section *** (ТочкаПроката.Актуально Get start)

                // *** End programmer edit section *** (ТочкаПроката.Актуально Get start)
                bool result = this.fАктуально;
                // *** Start programmer edit section *** (ТочкаПроката.Актуально Get end)

                // *** End programmer edit section *** (ТочкаПроката.Актуально Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ТочкаПроката.Актуально Set start)

                // *** End programmer edit section *** (ТочкаПроката.Актуально Set start)
                this.fАктуально = value;
                // *** Start programmer edit section *** (ТочкаПроката.Актуально Set end)

                // *** End programmer edit section *** (ТочкаПроката.Актуально Set end)
            }
        }
        
        /// <summary>
        /// ДатаНачалаАктуальности.
        /// </summary>
        // *** Start programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности CustomAttributes)

        // *** End programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности CustomAttributes)
        public virtual System.DateTime ДатаНачалаАктуальности
        {
            get
            {
                // *** Start programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Get start)

                // *** End programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Get start)
                System.DateTime result = this.fДатаНачалаАктуальности;
                // *** Start programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Get end)

                // *** End programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Set start)

                // *** End programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Set start)
                this.fДатаНачалаАктуальности = value;
                // *** Start programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Set end)

                // *** End programmer edit section *** (ТочкаПроката.ДатаНачалаАктуальности Set end)
            }
        }
        
        /// <summary>
        /// ДатаОкончанияАктуальности.
        /// </summary>
        // *** Start programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности CustomAttributes)

        // *** End programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности CustomAttributes)
        public virtual ICSSoft.STORMNET.UserDataTypes.NullableDateTime ДатаОкончанияАктуальности
        {
            get
            {
                // *** Start programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Get start)

                // *** End programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Get start)
                ICSSoft.STORMNET.UserDataTypes.NullableDateTime result = this.fДатаОкончанияАктуальности;
                // *** Start programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Get end)

                // *** End programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Set start)

                // *** End programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Set start)
                this.fДатаОкончанияАктуальности = value;
                // *** Start programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Set end)

                // *** End programmer edit section *** (ТочкаПроката.ДатаОкончанияАктуальности Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "ТочкаПрокатаE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ТочкаПрокатаE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ТочкаПрокатаE", typeof(IIS.Прокат_велосипедов_2.ТочкаПроката));
                }
            }
            
            /// <summary>
            /// "ТочкаПрокатаL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ТочкаПрокатаL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ТочкаПрокатаL", typeof(IIS.Прокат_велосипедов_2.ТочкаПроката));
                }
            }
        }
    }
}
